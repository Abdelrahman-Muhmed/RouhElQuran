@using Core.HelperModel.PaginationModel
@* @model IEnumerable<Core.Dto_s.InstructorCoursesDto> *@

@model PaginationRequest<Core.Dto_s.InstructorCoursesDto>


<style>
    .sortable-header {
        cursor: pointer;
        user-select: none;
        position: relative;
    }

        .sortable-header:hover {
            background-color: #f8f9fa;
        }

    .sort-icon {
        margin-left: 5px;
        font-size: 0.8em;
        color: #6c757d;
    }

    .sortable-header:hover .sort-icon {
        color: #495057;
    }

    .fa-sort-up, .fa-sort-down {
        color: #007bff !important;
    }
</style>
<!-- Table -->
<div class="TableContainer" id="instructorTableContainer">
    <table class="table table-hover mb-0">
        <thead class="table-light">
            <tr>
                <th class="d-none d-md-table-cell border-0">
                    <input class="form-check-input" type="checkbox">
                </th>
                <th class="border-0 sortable-header" data-column="Instructor.User_id.InsName">
                    Instructor Name
                    <i class="bi bi-arrow-down-up sort-icon"></i>
                </th>
                <th class="d-none d-lg-table-cell border-0 sortable-header" data-column="CurrentCourse">
                    Current Course
                    <i class="bi bi-arrow-down-up sort-icon"></i>
                </th>
                <th class="d-none d-lg-table-cell border-0 sortable-header" data-column="Instructor.Salary">
                    Salary
                    <i class="bi bi-arrow-down-up sort-icon"></i>
                </th>
                <th class="d-none d-xl-table-cell border-0 sortable-header" data-column="Instructor.Certificate">
                    Certificate
                    <i class="bi bi-arrow-down-up sort-icon"></i>
                </th>
                <th class="d-none d-xl-table-cell border-0 sortable-header" data-column="Instructor.TimeFrom">
                    Time Work
                    <i class="bi bi-arrow-down-up sort-icon"></i>
                </th>
                <th class="d-none d-xl-table-cell border-0 sortable-header" data-column="Instructor.DaysWork">
                    Days Work
                    <i class="bi bi-arrow-down-up sort-icon"></i>
                </th>
                <th class="border-0">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td class="d-none d-md-table-cell">
                        <input class="form-check-input" type="checkbox">
                    </td>
                    <td>
                        <div class="d-flex align-items-center">
                            <img src="https://via.placeholder.com/40" alt="Avatar" class="rounded-circle me-3 avatar-img shadow-sm" width="40" height="40">
                            <div>
                                <div class="instructor-name">@item.instructorDtos?.InsName</div>
                                <small class="instructor-email d-block d-sm-none"></small>
                                <small class="instructor-email">@item.instructorDtos?.InsEmail</small>
                            </div>
                        </div>
                    </td>
                    <td class="d-none d-lg-table-cell">
                        <span class="badge bg-light text-dark">
                            @(item.courseDtos != null ? string.Join(", ", item.courseDtos.Select(x => x.CrsName)) : "N/A")
                        </span>
                    </td>
                    <td class="d-none d-lg-table-cell">
                        <span class="salary-text">
                            @(item.instructorDtos != null ? $"${item.instructorDtos.Salary}" : "N/A")
                        </span>
                    </td>
                    <td class="d-none d-xl-table-cell">
                        <span class="badge certificate-badge text-white">
                            @item.instructorDtos?.Certificate
                        </span>
                    </td>
                    <td class="d-none d-xl-table-cell">
                        <small class="text-muted">
                            @(item.instructorDtos != null ? $"{item.instructorDtos.TimeFrom} - {item.instructorDtos.TimeTo}" : "N/A")
                        </small>
                    </td>
                    <td class="d-none d-xl-table-cell">
                        <small class="text-muted">
                            @item.instructorDtos?.DaysWork
                        </small>
                    </td>
                    <td>
                        <div class="d-flex gap-1">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle shadow-sm" data-bs-toggle="dropdown">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a onclick="Get('/Instructor/GetById/@item.insId', 'instructormodalContent','instructorCreateEditModalId')" class="dropdown-item">
                                            <i class="bx bx-show me-2"></i>Details
                                        </a>
                                    </li>
                                    <li><a href="#" class="dropdown-item"><i class="bx bx-archive me-2"></i>Archive</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a onclick="deleteRow('/Instructor/Delete/@item.insId')" class="dropdown-item text-danger">
                                            <i class="bx bx-trash me-2"></i>Delete
                                        </a>
                                    </li>
                                </ul>
                            </div>
                            <a class="btn btn-sm btn-outline-primary shadow-sm" onclick="Get('/Instructor/CreateEdit/@item.insId', 'instructormodalContent','instructorCreateEditModalId')" tabindex="0">
                                <i class="bx bx-edit"></i>
                            </a>
                        </div>
                        <!-- Mobile Info -->
                        <div class="d-block d-md-none mt-2">
                            <div class="mobile-info-card">
                                <div class="row g-2">
                                    <div class="col-6">
                                        <small class="text-muted d-block">Salary:</small>
                                        <span class="salary-text fw-semibold">
                                            @(item.instructorDtos != null ? $"${item.instructorDtos.Salary}" : "N/A")
                                        </span>
                                    </div>
                                    <div class="col-6">
                                        <small class="text-muted d-block">Days:</small>
                                        <span class="fw-semibold">
                                            @item.instructorDtos?.DaysWork
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model != null)
    {
        <div class="row mt-4 align-items-center">
            <div class="col-12 col-md-6 mb-3 mb-md-0">
                <div class="d-flex align-items-center flex-wrap">
                    <span class="me-2 text-muted">Show</span>
                    <select name="DataTables_Table_0_length" class="form-select form-select-sm shadow-sm" style="width: auto;">
                        @* Uncomment and populate the options if needed *@  
                      @*               @foreach (var size in Model.PageNumbers)
                        { *@
                            <option value="">soon</option>  
                        @* }   *@
                            </select>
                    <span class="ms-2 text-muted">entries</span>
                </div>
            </div>
            <div class="col-12 col-md-6">
                <nav aria-label="Page navigation">
                    <ul class="pagination pagination-sm justify-content-center justify-content-md-end mb-0">

                        <!-- Previous Button -->
                        <li class="page-item @(!Model.HasPrevious ? "disabled" : "")">
                            <a class="page-link"
                               href="javascript:void(0);"
                               data-page="@(Model.CurrentPage - 1)">
                                <i class="bx bx-chevron-left"></i>
                            </a>
                        </li>

                        <!-- Start Ellipsis -->
                        @if (Model.ShowStartEllipsis)
                        {
                            <li class="page-item">
                                <a class="page-link"
                                   href="javascript:void(0);"
                                   data-page="1">
                                    1
                                </a>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }

                        <!-- Page Numbers -->
                        @foreach (var pageNum in Model.PageNumbers)
                        {
                            <li class="page-item @(pageNum == Model.CurrentPage ? "active" : "")">
                                <a class="page-link"
                                   href="javascript:void(0);"
                                   data-page="@pageNum">
                                    @pageNum
                                </a>
                            </li>
                        }

                        <!-- End Ellipsis -->
                        @if (Model.ShowEndEllipsis)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                            <li class="page-item">
                                <a class="page-link"
                                   href="javascript:void(0);"
                                   data-page="@Model.TotalPages">
                                    @Model.TotalPages
                                </a>
                            </li>
                        }

                        <!-- Next Button -->
                        <li class="page-item @(!Model.HasNext ? "disabled" : "")">
                            <a class="page-link"
                               href="javascript:void(0);"
                               data-page="@(Model.CurrentPage + 1)">
                                <i class="bx bx-chevron-right"></i>
                            </a>
                        </li>

                    </ul>

                    <!-- Hidden fields to hold current sort & page state -->
                    <input type="hidden" id="currentSortBy" value="@Model.SortBy" />
                    <input type="hidden" id="currentIsDesc" value="@Model.IsDesc.ToString().ToLower()" />
                    <input type="hidden" id="currentPageSize" value="@Model.PageSize" />

                </nav>
            </div>
        </div>
        <!-- Pagination Info -->
        <div class="row mt-3">
            <div class="col-12 text-center text-md-start">
                <small class="text-muted">@Model.PaginationInfo</small>
            </div>
        </div>
    }
</div>