@using Core.HelperModel.PaginationModel
@* @model IEnumerable<Core.Dto_s.InstructorCoursesDto> *@

@model PaginationRequest<Core.Dto_s.InstructorCoursesDto>


@* @{
	ViewData["Title"] = "Dashboard - Instructor Management";
}
 *@


<style>
    body {
        background-color: #f8f9fa;
    }

    .card {
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border-radius: 0.5rem;
    }

    .card-header {
        background: linear-gradient(135deg, #667eea 0%, #1976d2 100%);
        color: white;
        border-radius: 0.5rem 0.5rem 0 0 !important;
        border: none;
        border-bottom: 2px solid #1565c0;
    }

        .card-header .card-title {
            color: white;
            font-weight: 600;
        }

        .card-header i {
            color: #f0f8ff;
        }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        color: white;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
            transform: translateY(-1px);
        }

    .btn-secondary {
        background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);
        border: none;
        color: white;
    }

        .btn-secondary:hover {
            background: linear-gradient(135deg, #6baff5 0%, #0770c1 100%);
            transform: translateY(-1px);
        }

    .table thead th {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border: none;
        font-weight: 600;
        color: #495057;
    }

    .table tbody tr:hover {
        background-color: rgba(102, 126, 234, 0.1);
    }

    .badge {
        font-weight: 500;
        padding: 0.5em 0.75em;
    }

    .avatar-img {
        border: 2px solid #dee2e6;
        transition: border-color 0.3s ease;
    }

        .avatar-img:hover {
            border-color: #667eea;
        }

    .dropdown-menu {
        border: none;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        border-radius: 0.5rem;
    }

    .dropdown-item:hover {
        background-color: rgba(102, 126, 234, 0.1);
    }

    .search-card {
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        border: 1px solid #e9ecef;
    }

        .search-card .card-header {
            background: linear-gradient(135deg, #fafafa 0%, #f0f0f0 100%);
            color: #424242;
            border-bottom: 1px solid #e0e0e0;
        }

        .search-card .card-title {
            color: #1976d2 !important;
        }

        .search-card i {
            color: #1976d2 !important;
        }

    .form-control:focus, .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .pagination .page-link {
        border: 1px solid #dee2e6;
        color: #667eea;
    }

    .pagination .page-item.active .page-link {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-color: #667eea;
    }

    .instructor-name {
        font-weight: 600;
        color: #495057;
    }

    .instructor-email {
        color: #6c757d;
        font-size: 0.875rem;
    }

    .salary-text {
        font-weight: 600;
        color: #28a745;
    }

    .mobile-info-card {
        background-color: #f8f9fa;
        border-radius: 0.25rem;
        padding: 0.5rem;
    }

    .status-active {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }

    .status-pending {
        background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
    }

    .status-inactive {
        background: linear-gradient(135deg, #dc3545 0%, #e83e8c 100%);
    }

    .certificate-badge {
        background: linear-gradient(135deg, #17a2b8 0%, #6f42c1 100%);
    }
</style>


<div class="row">
    <div class="col-12">
        <div class="card shadow-sm">
            <div class="card-header d-flex flex-column flex-md-row justify-content-between align-items-center py-3">
                <h5 class="card-title mb-2 mb-md-0 d-flex align-items-center">
                    <i class="bx bx-user-circle me-2 fs-4"></i>
                    Instructor Management
                </h5>
                <div class="d-flex flex-column flex-sm-row gap-2">
                    <div class="btn-group">
                        <button class="btn btn-secondary dropdown-toggle shadow-sm" type="button" data-bs-toggle="dropdown">
                            <i class="bx bx-export me-1"></i>
                            <span class="d-none d-sm-inline">Export</span>
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#"><i class="bx bx-file-export me-2"></i>Export Excel</a></li>
                            <li><a class="dropdown-item" href="#"><i class="bx bx-file me-2"></i>Export PDF</a></li>
                        </ul>
                    </div>
                    <button class="btn btn-primary shadow-sm" onclick="Get('/Instructor/CreateEdit/', 'instructormodalContent','instructorCreateEditModalId')">
                        <i class="bx bx-plus me-1"></i>
                        <span class="d-none d-sm-inline">Add New Record</span>
                    </button>
                </div>
            </div>

            <div class="card-body">
                <!-- Search Filters -->
                <div class="card search-card mb-4 shadow-sm">
                    <div class="card-header bg-white border-bottom">
                        <h6 class="card-title mb-0 d-flex align-items-center">
                            <i class="bx bx-filter-alt me-2 text-primary"></i>
                            Search Filters
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label fw-semibold">Status</label>
                                <select id="FilterTransaction" class="form-select shadow-sm">
                                    <option value="">Select Status</option>
                                    <option value="Pending">Pending</option>
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-semibold">Course Filter</label>
                                <select class="form-select shadow-sm">
                                    <option value="">All Courses</option>
                                    <option value="math">Mathematics</option>
                                    <option value="science">Science</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label fw-semibold">Search</label>
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="bx bx-search text-muted"></i>
                                    </span>
                                    <input type="search" class="form-control border-start-0 shadow-sm" placeholder="Search instructors...">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @Html.Partial("Instructors/_InstructorTCorseTablePartial")

            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="instructorCreateEditModalId" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content shadow">
            <div class="modal-header">
                @* 
                <h5 class="card-title mb-2 mb-md-0 d-flex align-items-center">
                    <i class="bx bx-user-plus me-2"></i>
                    Instructor 
                </h5> *@
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="instructormodalContent"></div>
        </div>
    </div>
</div>

@* 
<script>
    function initializeGenericSort(tableName) {
        let currentSortColumn = '';
        let currentSortDirection = 'asc';

        // Add click event to all sortable headers
        $(document).on('click', '.sortable-header', function() {
            const column = $(this).data('column');
            const table = $(this).data('table') || tableName; // Use parameter as fallback

            // Determine sort direction
            if (currentSortColumn === column) {
                currentSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';
            } else {
                currentSortDirection = 'asc';
            }
            currentSortColumn = column;

            // Show loading indicator
            showLoadingIndicator();

            // Make AJAX request
            $.ajax({
                url: '/Instructor/InstructorHome',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    tableName: table,
                    sortColumn: column,
                    sortDirection: currentSortDirection
                }),
                success: function(data) {
                    $('#table-container').html(data);
                    hideLoadingIndicator();
                    updateSortIcons(column, currentSortDirection);
                },
                error: function(xhr, status, error) {
                    console.error('Sort request failed:', error);
                    hideLoadingIndicator();
                    showErrorMessage('Failed to sort data. Please try again.');
                }
            });
        });
    }

    function updateSortIcons(sortColumn, sortDirection) {
        // Reset all sort icons
        $('.sort-icon').removeClass('fa-sort-up fa-sort-down').addClass('fa-sort');

        // Update the active column's icon
        $(`.sortable-header[data-column="${sortColumn}"] .sort-icon`)
            .removeClass('fa-sort')
            .addClass(sortDirection === 'asc' ? 'fa-sort-up' : 'fa-sort-down');
    }

    function showLoadingIndicator() {
        if ($('#loading-indicator').length === 0) {
            $('body').append(`
                <div id="loading-indicator" class="position-fixed top-50 start-50 translate-middle" style="z-index: 9999;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            `);
        }
    }

    function hideLoadingIndicator() {
        $('#loading-indicator').remove();
    }

    function showErrorMessage(message) {
        // You can customize this based on your UI framework
        alert(message);
        // Or use a toast notification, modal, etc.
    }

    // Initialize the sort functionality when document is ready
    $(document).ready(function() {
        initializeGenericSort('InstructorCourses'); // Pass the default table name
    });
</script> *@