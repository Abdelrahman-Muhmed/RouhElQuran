trigger:
- main  # اسم الفرع الذي سيُفعّل النشر عند التحديث

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x.x'  # تأكد من استخدام نسخة .NET 8

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- script: |
    msbuild CombinedPublish.msbuild /t:PublishAll
  displayName: 'Build and Publish Projects'

# خطوة نقل الملفات المنشورة إلى المسارات المحددة
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(build.artifactStagingDirectory)\WebApp'  # المسار الخاص بالملفات المنشورة
    TargetFolder: 'C:\Published\MVC'  # مسار الفولدر الذي ستضع فيه ملفات الـ MVC
    cleanTargetFolder: true  # سيقوم بحذف أي ملفات قديمة قبل النسخ

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(build.artifactStagingDirectory)\API'  # المسار الخاص بالملفات المنشورة
    TargetFolder: 'C:\Published\API'  # مسار الفولدر الذي ستضع فيه ملفات الـ API
    cleanTargetFolder: true  # سيقوم بحذف أي ملفات قديمة قبل النسخ

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# نشر الملفات كـ Build Artifacts للاستخدام لاحقًا
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'C:\Published'  # المسار الذي يحتوي على الملفات المنشورة
    ArtifactName: 'PublishedApps'
